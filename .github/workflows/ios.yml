name: iOS Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    name: Build and Release iOS App
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Xcode
        run: sudo xcode-select -s /Applications/Xcode_15.0.app

      - name: Select Scheme
        run: |
          scheme=$(xcodebuild -list -json | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo "SCHEME=$scheme" >> $GITHUB_ENV

      - name: Build App
        env:
          SCHEME: ${{ env.SCHEME }}
        run: |
          xcodebuild archive -scheme "$SCHEME" -archivePath "$PWD/build/ReminderWave.xcarchive"

      - name: Export IPA
        env:
          SCHEME: ${{ env.SCHEME }}
        run: |
          xcodebuild -exportArchive -archivePath "$PWD/build/ReminderWave.xcarchive" \
            -exportPath "$PWD/build/ReminderWave" \
            -exportOptionsPlist "$PWD/exportOptions.plist"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Automatically generated release from GitHub Actions
            
            Build: ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload IPA
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/ReminderWave/ReminderWave.ipa
          asset_name: ReminderWave-${{ github.ref_name }}.ipa
          asset_content_type: application/octet-stream
